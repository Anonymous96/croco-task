{
    "pipes": [],
    "interfaces": [
        {
            "name": "SlotsByProvider",
            "id": "interface-SlotsByProvider-0c7e5c1f35e3fd9ec798a9e0d8216db460f2b33cfbe2ff67a74f6f735ca778f6c9c893be1da03f54dc92d35de077ffc51c2de2876ce8d368d23e43d50730759f",
            "file": "src/app/core/models/ISlots.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Providers } from './IProviders.model';\n\nexport type Slots = {\n  gameId: string;\n  game_id: number;\n  image: string;\n  image2: string;\n  imageSet: {\n    blurhash: string;\n    original: string;\n    webp: string;\n  };\n  name: string;\n  order: number;\n  provider: string;\n  providerName: string;\n  tags: string[];\n  url: string;\n};\n\nexport interface SlotsByProvider extends Providers {\n  games: Slots[];\n}\n",
            "properties": [
                {
                    "name": "games",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Slots[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "Providers"
            ]
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "SlotsServiceService",
            "id": "injectable-SlotsServiceService-6c1cbc0a6175a6c094def4b00d3465bed5f6ec34d664bf07e10a6c13a863d1099358d53cc912923ed344df45cb7170711dc76774bd1ed3e5c3602b60e1541e32",
            "file": "src/app/core/services/slots-service.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "environment.serverUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "getCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Category[]>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDesktopCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Category[]>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProviders",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Providers[]>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSlotsByProvider",
                    "args": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SlotsByProvider>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, map, share, throwError } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport {\n  ProviderResponse,\n  Providers,\n  SlotsResponse,\n} from '../models/IProviders.model';\nimport { SlotsByProvider } from '../models/ISlots.model';\nimport { Category, CategoryResponse } from '../models/ICategory.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SlotsServiceService {\n  baseUrl = environment.serverUrl;\n  constructor(private http: HttpClient) {}\n\n  getProviders(): Observable<Providers[]> {\n    const params = new HttpParams()\n      .set('type', 'slot')\n      .set('platform', 'desktop');\n    return this.http\n      .get<ProviderResponse>(`${this.baseUrl}`, { params })\n      .pipe(map((items) => items?.data));\n  }\n\n  getSlotsByProvider(provider: string): Observable<SlotsByProvider> {\n    return this.http\n      .get<SlotsResponse>(`${this.baseUrl}/v2/slot/providers/${provider}`)\n      .pipe(\n        share(),\n        map((items) => items?.data)\n      );\n  }\n\n  getCategories(): Observable<Category[]> {\n    const params = new HttpParams().set('include', 'games');\n    return this.http\n      .get<CategoryResponse>(`${this.baseUrl}/v2/slot/categories`, { params })\n      .pipe(\n        share(),\n        map((items) => items?.data)\n      );\n  }\n\n  getDesktopCategories(): Observable<Category[]> {\n    return this.getCategories().pipe(\n      map((res) => res.filter((item) => item.platform !== 'mobile'))\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "BaseInterceptor",
            "id": "injectable-BaseInterceptor-78b3e28d12ec5a9c0cc9cd441360b9e80638993b3432ded56f894bc5fbab694d08d82e7da121a4cb81cb80a3f831bbe341f8e54df039f979aa27c0d5cdbaeb1f",
            "file": "src/app/core/interceptors/base-interceptor.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { ErrorResponse } from '../models/IError.model';\n\n@Injectable()\nexport class BaseInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((error: ErrorResponse) => {\n        if (error.statusCode === 404) {\n          alert(error.message);\n        } else {\n          console.error('Server-side error', error);\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n",
            "extends": [],
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2e08c2b46fa8cc08992f0555358692ca7772cfd396ec03a91252ac00f7a09f7bf7f3b8a21ce81e9b3bb56fcc26b346e8003306317e91b4ec4422cd5e7661261b",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'croco-task'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "NavigationComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavigationComponent } from './shared/components/navigation/navigation.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, HeaderComponent, NavigationComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css',\n})\nexport class AppComponent {\n  title = 'croco-task';\n}\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<body>\n  <div class=\"grid-container\">\n    <app-header></app-header>\n    <nav class=\"nav\">\n      <app-navigation></app-navigation>\n    </nav>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</body>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-cc656ed5c335237df319d32489912ccc4047a6ad25edec1afa275ad2f78831eb425cd04be18b94db7edbcefb9c81b08f136a2bae5eec0d9220662a32dc18147d",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.css',\n})\nexport class ButtonComponent {\n  @Input()\n  primary = false;\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  label = 'Button';\n\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary\n      ? 'storybook-button--primary'\n      : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0d5723ba1157487b7b12ed67c41eaad1231f92055b3fd037d3ef53b56f2979903473e34956526cf36783b58f6d12de45dd76931d59604af9e8691bdfa13d987d",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.css'\n})\nexport class HeaderComponent {\n\n}\n",
            "styleUrl": "./header.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header></header>\n"
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-d7010d6280b28719714c9e051a9f3cdb9281deeaf16e0457c1faaa449cf9f202785fbe9bda4f9c10b02002bf32aae5b12c6660e590ddb6c469801fc7b4ebf766",
            "file": "src/app/pages/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAllProviders",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "slotCategories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Category[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "slotProviders",
                    "defaultValue": "signal<Providers[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "slots",
                    "defaultValue": "signal<Slots[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "getCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProviders",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSlots",
                    "args": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPlayHandle",
                    "args": [
                        {
                            "name": "slot",
                            "type": "Slots",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "slot",
                            "type": "Slots",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDrodown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SlotItemComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { SlotsServiceService } from '../../core/services/slots-service.service';\nimport { CommonModule } from '@angular/common';\nimport { Providers } from '../../core/models/IProviders.model';\nimport { Slots } from '../../core/models/ISlots.model';\nimport { Category } from '../../core/models/ICategory.model';\nimport { SlotItemComponent } from '../../shared/components/slot-item/slot-item.component';\n\nconst SELECTED_PROVIDER = 'egt';\n\n@Component({\n  selector: 'app-home-page',\n  standalone: true,\n  imports: [SlotItemComponent, CommonModule],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.css',\n})\nexport class HomePageComponent {\n  slotProviders = signal<Providers[]>([]);\n  slots = signal<Slots[]>([]);\n  showAllProviders = signal<boolean>(false);\n  slotCategories: Category[] = [];\n\n  constructor(private slotsService: SlotsServiceService) {}\n\n  ngOnInit() {\n    this.getProviders();\n    this.getSlots(SELECTED_PROVIDER);\n    this.getCategories();\n  }\n\n  getProviders() {\n    this.slotsService.getProviders().subscribe((providers: Providers[]) => {\n      this.slotProviders.set(providers);\n    });\n  }\n\n  getSlots(provider: string) {\n    this.slotsService.getSlotsByProvider(provider).subscribe((res) => {\n      this.slots.set(res.games);\n    });\n  }\n\n  getCategories() {\n    this.slotsService.getDesktopCategories().subscribe((res) => {\n      this.slotCategories = res;\n    });\n  }\n\n  toggleDrodown() {\n    this.showAllProviders.set(!this.showAllProviders());\n  }\n\n  selectCategory(category: Category) {\n    this.slots.set(category.games);\n  }\n\n  onPlayHandle(slot: Slots) {\n    alert('Play ' + slot.name);\n  }\n}\n",
            "styleUrl": "./home-page.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "slotsService",
                        "type": "SlotsServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "slotsService",
                        "type": "SlotsServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"banner__section\"></section>\n<section class=\"tab__section\">\n  <div class=\"tabs\">\n    @if (slotCategories.length){ @for (category of slotCategories; track\n    category.name) {\n    <div class=\"tab_item\" (click)=\"selectCategory(category)\">\n      <span style=\"margin-left: 0.5rem\">{{ category.name }}</span>\n      <div class=\"category_count\" style=\"font-size: 11px\">\n        {{ category.totalGames }}\n      </div>\n    </div>\n\n    } @empty { No categories } }\n  </div>\n</section>\n<section class=\"category__section\">\n  @if (slotProviders().length){\n  <div class=\"slot__categories\" [ngClass]=\"{ active: showAllProviders() }\">\n    @for (provider of slotProviders(); track provider._id) {\n    <div class=\"slot-category\" (click)=\"getSlots(provider.provider)\">\n      {{ provider.name }}\n    </div>\n\n    } @empty { No Providers }\n\n    <div class=\"see__more\" (click)=\"toggleDrodown()\">\n      See {{ !showAllProviders() ? \"More\" : \"Less\" }}\n\n      @if(!showAllProviders()){\n      <img src=\"assets/images/arrow-down.svg\" alt=\"\" />\n      } @else {\n      <img src=\"assets/images/arrow-up.svg\" alt=\"\" />\n      }\n    </div>\n  </div>\n  }\n</section>\n\n<section>\n  <section class=\"slots__Section\">\n    @if(slots().length){\n    <div class=\"slot-grid-container\">\n      @for(slot of slots(); track slot.gameId) {\n      <slot-item\n        class=\"slots-grid\"\n        [title]=\"slot.name\"\n        [imgUrl]=\"slot.image\"\n        [tags]=\"slot.tags\"\n        (onClick)=\"onPlayHandle(slot)\"\n      ></slot-item>\n\n      }@empty { No slots }\n    </div>\n    }@else { Something is not correct }\n  </section>\n</section>\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-a08fe6b95ddc3c7de9f29d6c095b1592ca659d72c5143042906e8b5be08f42db421585006be1f8cd79f3bd1ca5b37933c03d0e1d2f541ad769e34bc519ea223c",
            "file": "src/app/shared/components/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NavItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { NavItemComponent } from '../nav-item/nav-item.component';\n\n@Component({\n  selector: 'app-navigation',\n  standalone: true,\n  imports: [NavItemComponent],\n  templateUrl: './navigation.component.html',\n  styleUrl: './navigation.component.css',\n})\nexport class NavigationComponent {}\n",
            "styleUrl": "./navigation.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"navbar\">\n  <a class=\"logo\">\n    <img src=\"assets/images/logo.svg\" alt=\"\" />\n  </a>\n  <ul class=\"navigation__ul\">\n    <app-nav-item label=\"Sport\" imgUrl=\"assets/images/sport.svg\"></app-nav-item>\n    <app-nav-item label=\"Live\" imgUrl=\"assets/images/live.svg\"></app-nav-item>\n    <app-nav-item\n      label=\"Slots\"\n      imgUrl=\"assets/images/slot-icon.svg\"\n      [active]=\"true\"\n    ></app-nav-item>\n    <app-nav-item\n      label=\"Casino\"\n      imgUrl=\"assets/images/casino-icon.svg\"\n    ></app-nav-item>\n  </ul>\n</nav>\n"
        },
        {
            "name": "NavItemComponent",
            "id": "component-NavItemComponent-8b5c8d2a42611d3a1b06c6ff5030a5cb57340043c0d16f9ba06cdadbd825502f825249b02ced4762ccc698c355d009876059a20c2c5d27952fae46bdb29b91a0",
            "file": "src/app/shared/components/nav-item/nav-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "imgUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Slots'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './nav-item.component.html',\n  styleUrl: './nav-item.component.css',\n})\nexport class NavItemComponent {\n  @Input()\n  label = 'Slots';\n\n  @Input()\n  imgUrl = '';\n\n  @Input()\n  active: boolean = false;\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n}\n",
            "styleUrl": "./nav-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<li class=\"navigation__li\" [ngClass]=\"{ active: active }\">\n  <a class=\"navigation__a\">\n    <img [src]=\"imgUrl\" />\n    {{ label | uppercase }}\n  </a>\n</li>\n"
        },
        {
            "name": "SlotItemComponent",
            "id": "component-SlotItemComponent-f9184328c19f344a6aa6895dbf68ed8bd6bae47dd8b8c8e8cc5f3a4dfa40c13d10e02ce36c8863f60d66418d69468dc16f0f8d671dd4a98b4b44217f91078d6e",
            "file": "src/app/shared/components/slot-item/slot-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "slot-item",
            "styleUrls": [
                "./slot-item.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./slot-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "imgUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tags",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ButtonComponent } from '../button/button.component';\n\n@Component({\n  selector: 'slot-item',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: './slot-item.component.html',\n  styleUrls: ['./slot-item.component.css'],\n})\nexport class SlotItemComponent {\n  @Input()\n  title = '';\n\n  @Input()\n  imgUrl = '';\n\n  @Input()\n  tags: string[] = [];\n\n  @Output()\n  onClick = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-item {\n  margin: 5px 0;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  background-color: #2a3139;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  min-height: 180px;\n  position: relative;\n  height: 100%;\n  max-width: 550px;\n}\n\n.grid-item .text {\n  background-color: #272d36;\n  width: 100%;\n  color: #fff;\n  min-height: 38px;\n  padding: 5px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  transition: 0.3s;\n}\n\n.grid-item .play__overlay {\n  visibility: hidden;\n  opacity: 0;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: calc(100% - 48px);\n  z-index: 15;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.3s;\n}\n\n.grid-item:hover .play__overlay {\n  visibility: visible;\n  opacity: 1;\n}\n\n.grid-item:hover .text {\n  background-color: #454d57;\n}\n\n.tag {\n  position: absolute;\n  left: 0.5rem;\n  top: 0.5rem;\n}\n",
                    "styleUrl": "./slot-item.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid-item\" [style.backgroundImage]=\"'url(' + imgUrl + ')'\">\n  <div class=\"tag\">\n    @if(tags.length){ @for(tag of tags; track tag) {\n    <app-button\n      [primary]=\"true\"\n      size=\"small\"\n      [label]=\"tag | uppercase\"\n    ></app-button>\n    } }\n  </div>\n  <span class=\"text\">{{ title }}</span>\n\n  <div class=\"play__overlay\">\n    <app-button\n      [primary]=\"true\"\n      size=\"large\"\n      label=\"PLAY\"\n      (onClick)=\"onClick.emit($event)\"\n    ></app-button>\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseInterceptor,\n      multi: true,\n    },\n  ],\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  serverUrl: 'https://cms.crocobet.com/integrations',\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavItemComponent>",
                "defaultValue": "{\n  title: 'Nav-Item',\n  component: NavItemComponent,\n  tags: ['autodocs'],\n  render: (args: NavItemComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SlotItemComponent>",
                "defaultValue": "{\n  title: 'Slot Item',\n  component: SlotItemComponent,\n  tags: ['autodocs'],\n  render: (args: SlotItemComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Slots',\n    imgUrl: '../../assets/images/slot-icon.svg',\n    active: true,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Slots',\n    imgUrl: 'https://static.crocobet.com/cms/slot/egt/801.jpg',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "SELECTED_PROVIDER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/home-page/home-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'egt'"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Category",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/ICategory.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "CategoryResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/ICategory.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ErrorResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/IError.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ProviderResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/IProviders.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Providers",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/IProviders.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Slots",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/ISlots.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SlotsResponse",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/models/IProviders.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavItemComponent>",
                "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SlotItemComponent>",
                "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BaseInterceptor,\n      multi: true,\n    },\n  ],\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  serverUrl: 'https://cms.crocobet.com/integrations',\n}"
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/app/shared/components/nav-item/nav-item.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavItemComponent>",
                    "defaultValue": "{\n  title: 'Nav-Item',\n  component: NavItemComponent,\n  tags: ['autodocs'],\n  render: (args: NavItemComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Slots',\n    imgUrl: '../../assets/images/slot-icon.svg',\n    active: true,\n  },\n}"
                }
            ],
            "src/app/shared/components/slot-item/slot-item.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SlotItemComponent>",
                    "defaultValue": "{\n  title: 'Slot Item',\n  component: SlotItemComponent,\n  tags: ['autodocs'],\n  render: (args: SlotItemComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Slots',\n    imgUrl: 'https://static.crocobet.com/cms/slot/egt/801.jpg',\n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/pages/home-page/home-page.component.ts": [
                {
                    "name": "SELECTED_PROVIDER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/home-page/home-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'egt'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/core/models/ICategory.model.ts": [
                {
                    "name": "Category",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/ICategory.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "CategoryResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/ICategory.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/models/IError.model.ts": [
                {
                    "name": "ErrorResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/IError.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/models/IProviders.model.ts": [
                {
                    "name": "ProviderResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/IProviders.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Providers",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/IProviders.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "SlotsResponse",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/IProviders.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/models/ISlots.model.ts": [
                {
                    "name": "Slots",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/models/ISlots.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/shared/components/nav-item/nav-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavItemComponent>",
                    "file": "src/app/shared/components/nav-item/nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/slot-item/slot-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SlotItemComponent>",
                    "file": "src/app/shared/components/slot-item/slot-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/base-interceptor.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "BaseInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/ISlots.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SlotsByProvider",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/slots-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SlotsServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home-page/home-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SELECTED_PROVIDER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/nav-item/nav-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavItemComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/nav-item/nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/nav-item/nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/slot-item/slot-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlotItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/slot-item/slot-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/slot-item/slot-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}